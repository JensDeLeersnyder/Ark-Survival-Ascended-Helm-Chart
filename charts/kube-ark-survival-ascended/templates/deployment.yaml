apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace}}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        namespace: {{ .Values.namespace}}
        app: {{ .Release.Name }}
    spec:
      volumes:
      - name: {{ .Release.Name }}-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-data-pvc
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        pullPolicy: IfNotPresent
        env:
        - name: RCON_PORT
          value: "{{ .Values.ports.server-port}}"
        - name: SERVER_PORT
          value: "{{ .Values.ports.rcon-port}}"
          {{- toYaml .Values.env | indent 12 }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        ports:
        - name: server-port
          containerPort: {{ (index (pluck "value" (where .Values.env "name" "SERVER_PORT")) 0) }}
          protocol: UDP
        - name: rcon-port
          containerPort: {{ (index (pluck "value" (where .Values.env "name" "RCON_PORT")) 0) }}
          protocol: TCP
        volumeMounts:
          - name: {{ .Release.Name }}-data
            mountPath:  /opt/arkserver
